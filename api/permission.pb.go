// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0-devel
// 	protoc        v3.21.1
// source: api/permission.proto

//this is the proto package name,all proto in this project must use this name as the proto package name

package api

import (
	_ "github.com/chenjie199234/Corelib/pbex"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//first element must be 0
	NodeId []uint32 `protobuf:"varint,2,rep,packed,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *GetUserPermissionReq) Reset() {
	*x = GetUserPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPermissionReq) ProtoMessage() {}

func (x *GetUserPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPermissionReq.ProtoReflect.Descriptor instead.
func (*GetUserPermissionReq) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserPermissionReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserPermissionReq) GetNodeId() []uint32 {
	if x != nil {
		return x.NodeId
	}
	return nil
}

type GetUserPermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Canread  bool `protobuf:"varint,1,opt,name=canread,proto3" json:"canread,omitempty"`
	Canwrite bool `protobuf:"varint,2,opt,name=canwrite,proto3" json:"canwrite,omitempty"`
	Admin    bool `protobuf:"varint,3,opt,name=admin,proto3" json:"admin,omitempty"`
}

func (x *GetUserPermissionResp) Reset() {
	*x = GetUserPermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPermissionResp) ProtoMessage() {}

func (x *GetUserPermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPermissionResp.ProtoReflect.Descriptor instead.
func (*GetUserPermissionResp) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserPermissionResp) GetCanread() bool {
	if x != nil {
		return x.Canread
	}
	return false
}

func (x *GetUserPermissionResp) GetCanwrite() bool {
	if x != nil {
		return x.Canwrite
	}
	return false
}

func (x *GetUserPermissionResp) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

type UpdateUserPermissionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//first element must be 0
	NodeId []uint32 `protobuf:"varint,2,rep,packed,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	//if admin is true,canread and canwrite will be ignore
	Admin bool `protobuf:"varint,3,opt,name=admin,proto3" json:"admin,omitempty"`
	//if admin is false,and canread is false too,means delete this user from this node
	//if admin is false,and canread is false and node_id's length is 1,means delete this user completely
	Canread bool `protobuf:"varint,4,opt,name=canread,proto3" json:"canread,omitempty"`
	//if canwrite is true,canread must be true too
	Canwrite bool `protobuf:"varint,5,opt,name=canwrite,proto3" json:"canwrite,omitempty"`
}

func (x *UpdateUserPermissionReq) Reset() {
	*x = UpdateUserPermissionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserPermissionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserPermissionReq) ProtoMessage() {}

func (x *UpdateUserPermissionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserPermissionReq.ProtoReflect.Descriptor instead.
func (*UpdateUserPermissionReq) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateUserPermissionReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserPermissionReq) GetNodeId() []uint32 {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *UpdateUserPermissionReq) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *UpdateUserPermissionReq) GetCanread() bool {
	if x != nil {
		return x.Canread
	}
	return false
}

func (x *UpdateUserPermissionReq) GetCanwrite() bool {
	if x != nil {
		return x.Canwrite
	}
	return false
}

type UpdateUserPermissionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserPermissionResp) Reset() {
	*x = UpdateUserPermissionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserPermissionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserPermissionResp) ProtoMessage() {}

func (x *UpdateUserPermissionResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserPermissionResp.ProtoReflect.Descriptor instead.
func (*UpdateUserPermissionResp) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{3}
}

type AddNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//first element must be 0
	PnodeId  []uint32 `protobuf:"varint,1,rep,packed,name=pnode_id,json=pnodeId,proto3" json:"pnode_id,omitempty"`
	NodeName string   `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	NodeData string   `protobuf:"bytes,3,opt,name=node_data,json=nodeData,proto3" json:"node_data,omitempty"`
}

func (x *AddNodeReq) Reset() {
	*x = AddNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNodeReq) ProtoMessage() {}

func (x *AddNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNodeReq.ProtoReflect.Descriptor instead.
func (*AddNodeReq) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{4}
}

func (x *AddNodeReq) GetPnodeId() []uint32 {
	if x != nil {
		return x.PnodeId
	}
	return nil
}

func (x *AddNodeReq) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *AddNodeReq) GetNodeData() string {
	if x != nil {
		return x.NodeData
	}
	return ""
}

type AddNodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddNodeResp) Reset() {
	*x = AddNodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNodeResp) ProtoMessage() {}

func (x *AddNodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNodeResp.ProtoReflect.Descriptor instead.
func (*AddNodeResp) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{5}
}

type UpdateNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//first element must be 0
	NodeId   []uint32 `protobuf:"varint,1,rep,packed,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeName string   `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	NodeData string   `protobuf:"bytes,3,opt,name=node_data,json=nodeData,proto3" json:"node_data,omitempty"`
}

func (x *UpdateNodeReq) Reset() {
	*x = UpdateNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeReq) ProtoMessage() {}

func (x *UpdateNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeReq.ProtoReflect.Descriptor instead.
func (*UpdateNodeReq) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateNodeReq) GetNodeId() []uint32 {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *UpdateNodeReq) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *UpdateNodeReq) GetNodeData() string {
	if x != nil {
		return x.NodeData
	}
	return ""
}

type UpdateNodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateNodeResp) Reset() {
	*x = UpdateNodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeResp) ProtoMessage() {}

func (x *UpdateNodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeResp.ProtoReflect.Descriptor instead.
func (*UpdateNodeResp) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{7}
}

type MoveNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//first element must be 0
	NodeId []uint32 `protobuf:"varint,1,rep,packed,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	//first element must be 0
	PnodeId []uint32 `protobuf:"varint,2,rep,packed,name=pnode_id,json=pnodeId,proto3" json:"pnode_id,omitempty"`
}

func (x *MoveNodeReq) Reset() {
	*x = MoveNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveNodeReq) ProtoMessage() {}

func (x *MoveNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveNodeReq.ProtoReflect.Descriptor instead.
func (*MoveNodeReq) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{8}
}

func (x *MoveNodeReq) GetNodeId() []uint32 {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *MoveNodeReq) GetPnodeId() []uint32 {
	if x != nil {
		return x.PnodeId
	}
	return nil
}

type MoveNodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MoveNodeResp) Reset() {
	*x = MoveNodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveNodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveNodeResp) ProtoMessage() {}

func (x *MoveNodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveNodeResp.ProtoReflect.Descriptor instead.
func (*MoveNodeResp) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{9}
}

type DelNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//first element must be 0
	NodeId []uint32 `protobuf:"varint,1,rep,packed,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *DelNodeReq) Reset() {
	*x = DelNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelNodeReq) ProtoMessage() {}

func (x *DelNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelNodeReq.ProtoReflect.Descriptor instead.
func (*DelNodeReq) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{10}
}

func (x *DelNodeReq) GetNodeId() []uint32 {
	if x != nil {
		return x.NodeId
	}
	return nil
}

type DelNodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelNodeResp) Reset() {
	*x = DelNodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelNodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelNodeResp) ProtoMessage() {}

func (x *DelNodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelNodeResp.ProtoReflect.Descriptor instead.
func (*DelNodeResp) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{11}
}

type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId   []uint32 `protobuf:"varint,1,rep,packed,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeName string   `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	NodeData string   `protobuf:"bytes,3,opt,name=node_data,json=nodeData,proto3" json:"node_data,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{12}
}

func (x *NodeInfo) GetNodeId() []uint32 {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *NodeInfo) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeInfo) GetNodeData() string {
	if x != nil {
		return x.NodeData
	}
	return ""
}

type ListUserNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//first element must be 0
	PnodeId []uint32 `protobuf:"varint,1,rep,packed,name=pnode_id,json=pnodeId,proto3" json:"pnode_id,omitempty"`
}

func (x *ListUserNodeReq) Reset() {
	*x = ListUserNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserNodeReq) ProtoMessage() {}

func (x *ListUserNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserNodeReq.ProtoReflect.Descriptor instead.
func (*ListUserNodeReq) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{13}
}

func (x *ListUserNodeReq) GetPnodeId() []uint32 {
	if x != nil {
		return x.PnodeId
	}
	return nil
}

type ListUserNodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*NodeInfo `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ListUserNodeResp) Reset() {
	*x = ListUserNodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserNodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserNodeResp) ProtoMessage() {}

func (x *ListUserNodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserNodeResp.ProtoReflect.Descriptor instead.
func (*ListUserNodeResp) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{14}
}

func (x *ListUserNodeResp) GetNodes() []*NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ListNodeUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId []uint32 `protobuf:"varint,1,rep,packed,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *ListNodeUserReq) Reset() {
	*x = ListNodeUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeUserReq) ProtoMessage() {}

func (x *ListNodeUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeUserReq.ProtoReflect.Descriptor instead.
func (*ListNodeUserReq) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{15}
}

func (x *ListNodeUserReq) GetNodeId() []uint32 {
	if x != nil {
		return x.NodeId
	}
	return nil
}

type ListNodeUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Canread  map[string]*UserInfo `protobuf:"bytes,1,rep,name=canread,proto3" json:"canread,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`   //key userid,value username
	Canwrite map[string]*UserInfo `protobuf:"bytes,2,rep,name=canwrite,proto3" json:"canwrite,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //key userid,value username
	Admin    map[string]*UserInfo `protobuf:"bytes,3,rep,name=admin,proto3" json:"admin,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`       //key userid,value username
}

func (x *ListNodeUserResp) Reset() {
	*x = ListNodeUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_permission_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeUserResp) ProtoMessage() {}

func (x *ListNodeUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_permission_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeUserResp.ProtoReflect.Descriptor instead.
func (*ListNodeUserResp) Descriptor() ([]byte, []int) {
	return file_api_permission_proto_rawDescGZIP(), []int{16}
}

func (x *ListNodeUserResp) GetCanread() map[string]*UserInfo {
	if x != nil {
		return x.Canread
	}
	return nil
}

func (x *ListNodeUserResp) GetCanwrite() map[string]*UserInfo {
	if x != nil {
		return x.Canwrite
	}
	return nil
}

func (x *ListNodeUserResp) GetAdmin() map[string]*UserInfo {
	if x != nil {
		return x.Admin
	}
	return nil
}

var File_api_permission_proto protoreflect.FileDescriptor

var file_api_permission_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x0f, 0x70,
	0x62, 0x65, 0x78, 0x2f, 0x70, 0x62, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e,
	0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57,
	0x0a, 0x17, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0x90, 0x4e, 0x00,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x04, 0x98, 0x90, 0x4e, 0x01, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x63, 0x61, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x22,
	0xa6, 0x01, 0x0a, 0x1a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1d,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0xe8, 0x90, 0x4e, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x04,
	0x90, 0x90, 0x4e, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x63, 0x61, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x6f, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x04, 0x90, 0x90, 0x4e, 0x00, 0x52,
	0x07, 0x70, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0x90, 0x4e,
	0x00, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x0f, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x70, 0x0a, 0x0f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x04, 0x98,
	0x90, 0x4e, 0x01, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0xe8, 0x90, 0x4e, 0x00, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x12, 0x0a, 0x10, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22,
	0x4f, 0x0a, 0x0d, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x42, 0x04, 0x98, 0x90, 0x4e, 0x01, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x08, 0x70, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0d, 0x42, 0x04, 0x90, 0x90, 0x4e, 0x00, 0x52, 0x07, 0x70, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x22, 0x10, 0x0a, 0x0e, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x22, 0x2d, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x42, 0x04, 0x98, 0x90, 0x4e, 0x01, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x22, 0x5e, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x35, 0x0a, 0x12, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x04, 0x90, 0x90, 0x4e, 0x00,
	0x52, 0x07, 0x70, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x13, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x12, 0x26, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x12, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x1d,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42,
	0x04, 0x90, 0x90, 0x4e, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0xc4, 0x03,
	0x0a, 0x13, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x07, 0x63, 0x61, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x2e, 0x43, 0x61, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x63, 0x61, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x44, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x43, 0x61, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x3b,
	0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x4c, 0x0a, 0x0c, 0x43,
	0x61, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4d, 0x0a, 0x0d, 0x43, 0x61, 0x6e,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4a, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x32, 0xc4, 0x05, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x72, 0x0a, 0x16, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f,
	0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x48, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x61, 0x64, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x61, 0x64, 0x64, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74,
	0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x51, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70,
	0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4b, 0x0a, 0x09,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74,
	0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x48, 0x0a, 0x08, 0x64, 0x65, 0x6c,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x65,
	0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x5a, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f,
	0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x5a, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f,
	0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x28, 0x5a, 0x26, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x68, 0x65, 0x6e, 0x6a, 0x69,
	0x65, 0x31, 0x39, 0x39, 0x32, 0x33, 0x34, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x61, 0x70,
	0x69, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_permission_proto_rawDescOnce sync.Once
	file_api_permission_proto_rawDescData = file_api_permission_proto_rawDesc
)

func file_api_permission_proto_rawDescGZIP() []byte {
	file_api_permission_proto_rawDescOnce.Do(func() {
		file_api_permission_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_permission_proto_rawDescData)
	})
	return file_api_permission_proto_rawDescData
}

var file_api_permission_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_api_permission_proto_goTypes = []interface{}{
	(*GetUserPermissionReq)(nil),     // 0: admin.get_user_permission_req
	(*GetUserPermissionResp)(nil),    // 1: admin.get_user_permission_resp
	(*UpdateUserPermissionReq)(nil),  // 2: admin.update_user_permission_req
	(*UpdateUserPermissionResp)(nil), // 3: admin.update_user_permission_resp
	(*AddNodeReq)(nil),               // 4: admin.add_node_req
	(*AddNodeResp)(nil),              // 5: admin.add_node_resp
	(*UpdateNodeReq)(nil),            // 6: admin.update_node_req
	(*UpdateNodeResp)(nil),           // 7: admin.update_node_resp
	(*MoveNodeReq)(nil),              // 8: admin.move_node_req
	(*MoveNodeResp)(nil),             // 9: admin.move_node_resp
	(*DelNodeReq)(nil),               // 10: admin.del_node_req
	(*DelNodeResp)(nil),              // 11: admin.del_node_resp
	(*NodeInfo)(nil),                 // 12: admin.node_info
	(*ListUserNodeReq)(nil),          // 13: admin.list_user_node_req
	(*ListUserNodeResp)(nil),         // 14: admin.list_user_node_resp
	(*ListNodeUserReq)(nil),          // 15: admin.list_node_user_req
	(*ListNodeUserResp)(nil),         // 16: admin.list_node_user_resp
	nil,                              // 17: admin.list_node_user_resp.CanreadEntry
	nil,                              // 18: admin.list_node_user_resp.CanwriteEntry
	nil,                              // 19: admin.list_node_user_resp.AdminEntry
	(*UserInfo)(nil),                 // 20: admin.user_info
}
var file_api_permission_proto_depIdxs = []int32{
	12, // 0: admin.list_user_node_resp.nodes:type_name -> admin.node_info
	17, // 1: admin.list_node_user_resp.canread:type_name -> admin.list_node_user_resp.CanreadEntry
	18, // 2: admin.list_node_user_resp.canwrite:type_name -> admin.list_node_user_resp.CanwriteEntry
	19, // 3: admin.list_node_user_resp.admin:type_name -> admin.list_node_user_resp.AdminEntry
	20, // 4: admin.list_node_user_resp.CanreadEntry.value:type_name -> admin.user_info
	20, // 5: admin.list_node_user_resp.CanwriteEntry.value:type_name -> admin.user_info
	20, // 6: admin.list_node_user_resp.AdminEntry.value:type_name -> admin.user_info
	0,  // 7: admin.permission.get_user_permission:input_type -> admin.get_user_permission_req
	2,  // 8: admin.permission.update_user_permission:input_type -> admin.update_user_permission_req
	4,  // 9: admin.permission.add_node:input_type -> admin.add_node_req
	6,  // 10: admin.permission.update_node:input_type -> admin.update_node_req
	8,  // 11: admin.permission.move_node:input_type -> admin.move_node_req
	10, // 12: admin.permission.del_node:input_type -> admin.del_node_req
	13, // 13: admin.permission.list_user_node:input_type -> admin.list_user_node_req
	15, // 14: admin.permission.list_node_user:input_type -> admin.list_node_user_req
	1,  // 15: admin.permission.get_user_permission:output_type -> admin.get_user_permission_resp
	3,  // 16: admin.permission.update_user_permission:output_type -> admin.update_user_permission_resp
	5,  // 17: admin.permission.add_node:output_type -> admin.add_node_resp
	7,  // 18: admin.permission.update_node:output_type -> admin.update_node_resp
	9,  // 19: admin.permission.move_node:output_type -> admin.move_node_resp
	11, // 20: admin.permission.del_node:output_type -> admin.del_node_resp
	14, // 21: admin.permission.list_user_node:output_type -> admin.list_user_node_resp
	16, // 22: admin.permission.list_node_user:output_type -> admin.list_node_user_resp
	15, // [15:23] is the sub-list for method output_type
	7,  // [7:15] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_permission_proto_init() }
func file_api_permission_proto_init() {
	if File_api_permission_proto != nil {
		return
	}
	file_api_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_permission_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserPermissionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserPermissionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveNodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelNodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserNodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_permission_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_permission_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_permission_proto_goTypes,
		DependencyIndexes: file_api_permission_proto_depIdxs,
		MessageInfos:      file_api_permission_proto_msgTypes,
	}.Build()
	File_api_permission_proto = out.File
	file_api_permission_proto_rawDesc = nil
	file_api_permission_proto_goTypes = nil
	file_api_permission_proto_depIdxs = nil
}
