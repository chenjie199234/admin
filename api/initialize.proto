syntax="proto3";

//this is the proto package name,all proto in this project must use this name as the proto package name
package admin;
//this is the golang's package name,all proto in this project must use this name as the golang's package name
option go_package="github.com/chenjie199234/admin/api;api";
//https://github.com/chenjie199234/Corelib/blob/main/pbex/pbex.proto
import "pbex/pbex.proto";

//this is the proto file for init service
service initialize{
	//rpc example(examplereq)returns(exampleresp){
	//	option (pbex.method)="get";//can be set to get,delete,post,put,patch
	//	option (pbex.web_midwares)="b";
	//	option (pbex.web_midwares)="c";
	//	option (pbex.web_midwares)="a";//this function on web protocol has 3 midwares,it's order is b,c,a
	//	option (pbex.crpc_midwares)="b";
	//	option (pbex.crpc_midwares)="c";
	//	option (pbex.crpc_midwares)="a";//this function on crpc protocol has 3 midwares,it's order is b,c,a
	//	option (pbex.cgrpc_midwares)="b";
	//	option (pbex.cgrpc_midwares)="c";
	//	option (pbex.cgrpc_midwares)="a";//this function on grpc protocol has 3 midwares,it's order is b,c,a
	//}

	//初始化
	rpc init(init_req)returns(init_resp){
		option (pbex.method)="post";
	}
	//登录
	rpc root_login(root_login_req)returns(root_login_resp){
		option (pbex.method)="post";
	}
	//更新密码
	rpc root_password(root_password_req)returns(root_password_resp){
		option (pbex.method)="post";
		option (pbex.web_midwares)="token";
	}
	//创建项目
	rpc create_project(create_project_req)returns(create_project_resp){
		option (pbex.method)="post";
		option (pbex.web_midwares)="token";
	}
	//获取项目列表
	rpc list_project(list_project_req)returns(list_project_resp){
		option (pbex.method)="post";
		option (pbex.web_midwares)="token";
	}
}
//req can be set with pbex extentions
//message examplereq{
	//int64 example_for_extentions=1[(pbex.int_gt)=1,(pbex.int_lt)=100];
//}
//resp's pbex extentions will be ignore
//message exampleresp{
	//int64 example_resp=1;
//}

message init_req{
	string password=1[(pbex.string_bytes_len_not_eq)=0];
}
message init_resp{

}
message root_login_req{
	string password=1[(pbex.string_bytes_len_not_eq)=0];
}
message root_login_resp{
	string token=1;
}
message root_password_req{
	string old_password=1[(pbex.string_bytes_len_not_eq)=0];
	string new_password=2[(pbex.string_bytes_len_not_eq)=0];
}
message root_password_resp{
}
message create_project_req{
	string project_name=1[(pbex.string_bytes_len_not_eq)=0];
	string project_data=2;
}
message create_project_resp{
}
message project_info{
	repeated uint32 node_id=1;
	string project_name=2;
	string project_data=3;
}
message list_project_req{
}
message list_project_resp{
	repeated project_info projects=1;
}
