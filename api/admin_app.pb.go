// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.0
// source: api/admin_app.proto

//this is the proto package name,all proto in this project must use this name as the proto package name

package api

import (
	_ "github.com/chenjie199234/Corelib/pbex"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GName     string   `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName     string   `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	Secret    string   `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *GetAppReq) Reset() {
	*x = GetAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppReq) ProtoMessage() {}

func (x *GetAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppReq.ProtoReflect.Descriptor instead.
func (*GetAppReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{0}
}

func (x *GetAppReq) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *GetAppReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *GetAppReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *GetAppReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type GetAppResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscoverMode            string                    `protobuf:"bytes,1,opt,name=discover_mode,json=discoverMode,proto3" json:"discover_mode,omitempty"`                                  //can be one of "kubernetes" / "dns" / "static"
	KubernetesNamespace     string                    `protobuf:"bytes,2,opt,name=kubernetes_namespace,json=kubernetesNamespace,proto3" json:"kubernetes_namespace,omitempty"`             //when discover_mode == "kubernetes"
	KubernetesLabelselector string                    `protobuf:"bytes,3,opt,name=kubernetes_labelselector,json=kubernetesLabelselector,proto3" json:"kubernetes_labelselector,omitempty"` //when discover_mode == "kubernetes"
	KubernetesFieldselector string                    `protobuf:"bytes,4,opt,name=kubernetes_fieldselector,json=kubernetesFieldselector,proto3" json:"kubernetes_fieldselector,omitempty"` //when discover_mode == "kubernetes"
	DnsHost                 string                    `protobuf:"bytes,5,opt,name=dns_host,json=dnsHost,proto3" json:"dns_host,omitempty"`                                                 //when discover_mode == "dns"
	DnsInterval             uint32                    `protobuf:"varint,6,opt,name=dns_interval,json=dnsInterval,proto3" json:"dns_interval,omitempty"`                                    //when discover_mode == "dns",unit seconds
	StaticAddrs             []string                  `protobuf:"bytes,7,rep,name=static_addrs,json=staticAddrs,proto3" json:"static_addrs,omitempty"`                                     //when discover_mode == "static"
	CrpcPort                uint32                    `protobuf:"varint,8,opt,name=crpc_port,json=crpcPort,proto3" json:"crpc_port,omitempty"`
	CgrpcPort               uint32                    `protobuf:"varint,9,opt,name=cgrpc_port,json=cgrpcPort,proto3" json:"cgrpc_port,omitempty"`
	WebPort                 uint32                    `protobuf:"varint,10,opt,name=web_port,json=webPort,proto3" json:"web_port,omitempty"`
	Keys                    map[string]*KeyConfigInfo `protobuf:"bytes,11,rep,name=keys,proto3" json:"keys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Paths                   map[string]*ProxyPathInfo `protobuf:"bytes,12,rep,name=paths,proto3" json:"paths,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAppResp) Reset() {
	*x = GetAppResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppResp) ProtoMessage() {}

func (x *GetAppResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppResp.ProtoReflect.Descriptor instead.
func (*GetAppResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{1}
}

func (x *GetAppResp) GetDiscoverMode() string {
	if x != nil {
		return x.DiscoverMode
	}
	return ""
}

func (x *GetAppResp) GetKubernetesNamespace() string {
	if x != nil {
		return x.KubernetesNamespace
	}
	return ""
}

func (x *GetAppResp) GetKubernetesLabelselector() string {
	if x != nil {
		return x.KubernetesLabelselector
	}
	return ""
}

func (x *GetAppResp) GetKubernetesFieldselector() string {
	if x != nil {
		return x.KubernetesFieldselector
	}
	return ""
}

func (x *GetAppResp) GetDnsHost() string {
	if x != nil {
		return x.DnsHost
	}
	return ""
}

func (x *GetAppResp) GetDnsInterval() uint32 {
	if x != nil {
		return x.DnsInterval
	}
	return 0
}

func (x *GetAppResp) GetStaticAddrs() []string {
	if x != nil {
		return x.StaticAddrs
	}
	return nil
}

func (x *GetAppResp) GetCrpcPort() uint32 {
	if x != nil {
		return x.CrpcPort
	}
	return 0
}

func (x *GetAppResp) GetCgrpcPort() uint32 {
	if x != nil {
		return x.CgrpcPort
	}
	return 0
}

func (x *GetAppResp) GetWebPort() uint32 {
	if x != nil {
		return x.WebPort
	}
	return 0
}

func (x *GetAppResp) GetKeys() map[string]*KeyConfigInfo {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *GetAppResp) GetPaths() map[string]*ProxyPathInfo {
	if x != nil {
		return x.Paths
	}
	return nil
}

type ProxyPathInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId []uint32 `protobuf:"varint,1,rep,packed,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Read   bool     `protobuf:"varint,2,opt,name=read,proto3" json:"read,omitempty"`   //need read permission on this node
	Write  bool     `protobuf:"varint,3,opt,name=write,proto3" json:"write,omitempty"` //need write permission on this node
	Admin  bool     `protobuf:"varint,4,opt,name=admin,proto3" json:"admin,omitempty"` //need admin permission on this node
}

func (x *ProxyPathInfo) Reset() {
	*x = ProxyPathInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyPathInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyPathInfo) ProtoMessage() {}

func (x *ProxyPathInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyPathInfo.ProtoReflect.Descriptor instead.
func (*ProxyPathInfo) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{2}
}

func (x *ProxyPathInfo) GetNodeId() []uint32 {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *ProxyPathInfo) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

func (x *ProxyPathInfo) GetWrite() bool {
	if x != nil {
		return x.Write
	}
	return false
}

func (x *ProxyPathInfo) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

type KeyConfigInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurIndex     uint32 `protobuf:"varint,1,opt,name=cur_index,json=curIndex,proto3" json:"cur_index,omitempty"`
	MaxIndex     uint32 `protobuf:"varint,2,opt,name=max_index,json=maxIndex,proto3" json:"max_index,omitempty"`
	CurVersion   uint32 `protobuf:"varint,3,opt,name=cur_version,json=curVersion,proto3" json:"cur_version,omitempty"`
	CurValue     string `protobuf:"bytes,4,opt,name=cur_value,json=curValue,proto3" json:"cur_value,omitempty"`
	CurValueType string `protobuf:"bytes,5,opt,name=cur_value_type,json=curValueType,proto3" json:"cur_value_type,omitempty"`
}

func (x *KeyConfigInfo) Reset() {
	*x = KeyConfigInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyConfigInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyConfigInfo) ProtoMessage() {}

func (x *KeyConfigInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyConfigInfo.ProtoReflect.Descriptor instead.
func (*KeyConfigInfo) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{3}
}

func (x *KeyConfigInfo) GetCurIndex() uint32 {
	if x != nil {
		return x.CurIndex
	}
	return 0
}

func (x *KeyConfigInfo) GetMaxIndex() uint32 {
	if x != nil {
		return x.MaxIndex
	}
	return 0
}

func (x *KeyConfigInfo) GetCurVersion() uint32 {
	if x != nil {
		return x.CurVersion
	}
	return 0
}

func (x *KeyConfigInfo) GetCurValue() string {
	if x != nil {
		return x.CurValue
	}
	return ""
}

func (x *KeyConfigInfo) GetCurValueType() string {
	if x != nil {
		return x.CurValueType
	}
	return ""
}

type SetAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId               []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GName                   string   `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName                   string   `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	Secret                  string   `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	DiscoverMode            string   `protobuf:"bytes,5,opt,name=discover_mode,json=discoverMode,proto3" json:"discover_mode,omitempty"`
	KubernetesNamespace     string   `protobuf:"bytes,6,opt,name=kubernetes_namespace,json=kubernetesNamespace,proto3" json:"kubernetes_namespace,omitempty"`             //when discover_mode == "kubernetes"
	KubernetesLabelselector string   `protobuf:"bytes,7,opt,name=kubernetes_labelselector,json=kubernetesLabelselector,proto3" json:"kubernetes_labelselector,omitempty"` //when discover_mode == "kubernetes"
	KubernetesFieldselector string   `protobuf:"bytes,8,opt,name=kubernetes_fieldselector,json=kubernetesFieldselector,proto3" json:"kubernetes_fieldselector,omitempty"` //when discover_mode == "kubernetes"
	DnsHost                 string   `protobuf:"bytes,9,opt,name=dns_host,json=dnsHost,proto3" json:"dns_host,omitempty"`                                                 //when discover_mode == "dns"
	DnsInterval             uint32   `protobuf:"varint,10,opt,name=dns_interval,json=dnsInterval,proto3" json:"dns_interval,omitempty"`                                   //when discover_mode == "dns",unit seconds
	StaticAddrs             []string `protobuf:"bytes,11,rep,name=static_addrs,json=staticAddrs,proto3" json:"static_addrs,omitempty"`                                    //when discover_mode == "static"
	CrpcPort                uint32   `protobuf:"varint,12,opt,name=crpc_port,json=crpcPort,proto3" json:"crpc_port,omitempty"`
	CgrpcPort               uint32   `protobuf:"varint,13,opt,name=cgrpc_port,json=cgrpcPort,proto3" json:"cgrpc_port,omitempty"`
	WebPort                 uint32   `protobuf:"varint,14,opt,name=web_port,json=webPort,proto3" json:"web_port,omitempty"`
	NewApp                  bool     `protobuf:"varint,15,opt,name=new_app,json=newApp,proto3" json:"new_app,omitempty"` //true: create a new app. false: update the already exist app
}

func (x *SetAppReq) Reset() {
	*x = SetAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAppReq) ProtoMessage() {}

func (x *SetAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAppReq.ProtoReflect.Descriptor instead.
func (*SetAppReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{4}
}

func (x *SetAppReq) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *SetAppReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *SetAppReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *SetAppReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *SetAppReq) GetDiscoverMode() string {
	if x != nil {
		return x.DiscoverMode
	}
	return ""
}

func (x *SetAppReq) GetKubernetesNamespace() string {
	if x != nil {
		return x.KubernetesNamespace
	}
	return ""
}

func (x *SetAppReq) GetKubernetesLabelselector() string {
	if x != nil {
		return x.KubernetesLabelselector
	}
	return ""
}

func (x *SetAppReq) GetKubernetesFieldselector() string {
	if x != nil {
		return x.KubernetesFieldselector
	}
	return ""
}

func (x *SetAppReq) GetDnsHost() string {
	if x != nil {
		return x.DnsHost
	}
	return ""
}

func (x *SetAppReq) GetDnsInterval() uint32 {
	if x != nil {
		return x.DnsInterval
	}
	return 0
}

func (x *SetAppReq) GetStaticAddrs() []string {
	if x != nil {
		return x.StaticAddrs
	}
	return nil
}

func (x *SetAppReq) GetCrpcPort() uint32 {
	if x != nil {
		return x.CrpcPort
	}
	return 0
}

func (x *SetAppReq) GetCgrpcPort() uint32 {
	if x != nil {
		return x.CgrpcPort
	}
	return 0
}

func (x *SetAppReq) GetWebPort() uint32 {
	if x != nil {
		return x.WebPort
	}
	return 0
}

func (x *SetAppReq) GetNewApp() bool {
	if x != nil {
		return x.NewApp
	}
	return false
}

type SetAppResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId []uint32 `protobuf:"varint,1,rep,packed,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *SetAppResp) Reset() {
	*x = SetAppResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAppResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAppResp) ProtoMessage() {}

func (x *SetAppResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAppResp.ProtoReflect.Descriptor instead.
func (*SetAppResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{5}
}

func (x *SetAppResp) GetNodeId() []uint32 {
	if x != nil {
		return x.NodeId
	}
	return nil
}

type DelAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GName     string   `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName     string   `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	Secret    string   `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *DelAppReq) Reset() {
	*x = DelAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAppReq) ProtoMessage() {}

func (x *DelAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAppReq.ProtoReflect.Descriptor instead.
func (*DelAppReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{6}
}

func (x *DelAppReq) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *DelAppReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *DelAppReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *DelAppReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type DelAppResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelAppResp) Reset() {
	*x = DelAppResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAppResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAppResp) ProtoMessage() {}

func (x *DelAppResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAppResp.ProtoReflect.Descriptor instead.
func (*DelAppResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{7}
}

type UpdateAppSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GName     string   `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName     string   `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	OldSecret string   `protobuf:"bytes,4,opt,name=old_secret,json=oldSecret,proto3" json:"old_secret,omitempty"`
	NewSecret string   `protobuf:"bytes,5,opt,name=new_secret,json=newSecret,proto3" json:"new_secret,omitempty"`
}

func (x *UpdateAppSecretReq) Reset() {
	*x = UpdateAppSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppSecretReq) ProtoMessage() {}

func (x *UpdateAppSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppSecretReq.ProtoReflect.Descriptor instead.
func (*UpdateAppSecretReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateAppSecretReq) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *UpdateAppSecretReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *UpdateAppSecretReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *UpdateAppSecretReq) GetOldSecret() string {
	if x != nil {
		return x.OldSecret
	}
	return ""
}

func (x *UpdateAppSecretReq) GetNewSecret() string {
	if x != nil {
		return x.NewSecret
	}
	return ""
}

type UpdateAppSecretResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAppSecretResp) Reset() {
	*x = UpdateAppSecretResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppSecretResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppSecretResp) ProtoMessage() {}

func (x *UpdateAppSecretResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppSecretResp.ProtoReflect.Descriptor instead.
func (*UpdateAppSecretResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{9}
}

type DelKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GName     string   `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName     string   `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	Key       string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"` //can't contain '.' in key
	Secret    string   `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *DelKeyReq) Reset() {
	*x = DelKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelKeyReq) ProtoMessage() {}

func (x *DelKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelKeyReq.ProtoReflect.Descriptor instead.
func (*DelKeyReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{10}
}

func (x *DelKeyReq) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *DelKeyReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *DelKeyReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *DelKeyReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DelKeyReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type DelKeyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelKeyResp) Reset() {
	*x = DelKeyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelKeyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelKeyResp) ProtoMessage() {}

func (x *DelKeyResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelKeyResp.ProtoReflect.Descriptor instead.
func (*DelKeyResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{11}
}

type GetKeyConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GName     string   `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName     string   `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	Key       string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`      //can't contain '.' in key
	Index     uint32   `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"` //0 means return current active config,config's index start from 1
	Secret    string   `protobuf:"bytes,6,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *GetKeyConfigReq) Reset() {
	*x = GetKeyConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyConfigReq) ProtoMessage() {}

func (x *GetKeyConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyConfigReq.ProtoReflect.Descriptor instead.
func (*GetKeyConfigReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{12}
}

func (x *GetKeyConfigReq) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *GetKeyConfigReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *GetKeyConfigReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *GetKeyConfigReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetKeyConfigReq) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *GetKeyConfigReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type GetKeyConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurIndex   uint32 `protobuf:"varint,1,opt,name=cur_index,json=curIndex,proto3" json:"cur_index,omitempty"`       //current active config index,0 means not exist
	MaxIndex   uint32 `protobuf:"varint,2,opt,name=max_index,json=maxIndex,proto3" json:"max_index,omitempty"`       //current max config index,0 means not exist
	CurVersion uint32 `protobuf:"varint,3,opt,name=cur_version,json=curVersion,proto3" json:"cur_version,omitempty"` //current active config version,config's version start from 1
	ThisIndex  uint32 `protobuf:"varint,4,opt,name=this_index,json=thisIndex,proto3" json:"this_index,omitempty"`    //the config data below belong's to which index
	Value      string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	ValueType  string `protobuf:"bytes,6,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
}

func (x *GetKeyConfigResp) Reset() {
	*x = GetKeyConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyConfigResp) ProtoMessage() {}

func (x *GetKeyConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyConfigResp.ProtoReflect.Descriptor instead.
func (*GetKeyConfigResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{13}
}

func (x *GetKeyConfigResp) GetCurIndex() uint32 {
	if x != nil {
		return x.CurIndex
	}
	return 0
}

func (x *GetKeyConfigResp) GetMaxIndex() uint32 {
	if x != nil {
		return x.MaxIndex
	}
	return 0
}

func (x *GetKeyConfigResp) GetCurVersion() uint32 {
	if x != nil {
		return x.CurVersion
	}
	return 0
}

func (x *GetKeyConfigResp) GetThisIndex() uint32 {
	if x != nil {
		return x.ThisIndex
	}
	return 0
}

func (x *GetKeyConfigResp) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GetKeyConfigResp) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

type SetKeyConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GName     string   `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName     string   `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	Key       string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"` //can't contain '.' in key
	Value     string   `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	ValueType string   `protobuf:"bytes,6,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	Secret    string   `protobuf:"bytes,7,opt,name=secret,proto3" json:"secret,omitempty"`
	NewKey    bool     `protobuf:"varint,8,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"` //true: create a new key config. false: update the already exist key config
}

func (x *SetKeyConfigReq) Reset() {
	*x = SetKeyConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetKeyConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetKeyConfigReq) ProtoMessage() {}

func (x *SetKeyConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetKeyConfigReq.ProtoReflect.Descriptor instead.
func (*SetKeyConfigReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{14}
}

func (x *SetKeyConfigReq) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *SetKeyConfigReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *SetKeyConfigReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *SetKeyConfigReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetKeyConfigReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SetKeyConfigReq) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *SetKeyConfigReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *SetKeyConfigReq) GetNewKey() bool {
	if x != nil {
		return x.NewKey
	}
	return false
}

type SetKeyConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetKeyConfigResp) Reset() {
	*x = SetKeyConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetKeyConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetKeyConfigResp) ProtoMessage() {}

func (x *SetKeyConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetKeyConfigResp.ProtoReflect.Descriptor instead.
func (*SetKeyConfigResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{15}
}

type RollbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GName     string   `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName     string   `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	Key       string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"` //can't contain '.' in key
	Secret    string   `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
	Index     uint32   `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *RollbackReq) Reset() {
	*x = RollbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackReq) ProtoMessage() {}

func (x *RollbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackReq.ProtoReflect.Descriptor instead.
func (*RollbackReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{16}
}

func (x *RollbackReq) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *RollbackReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *RollbackReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *RollbackReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RollbackReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *RollbackReq) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type RollbackResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RollbackResp) Reset() {
	*x = RollbackResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollbackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackResp) ProtoMessage() {}

func (x *RollbackResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackResp.ProtoReflect.Descriptor instead.
func (*RollbackResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{17}
}

type WatchConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	GName       string `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName       string `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	// map's key is config's keyname,map's value is config's cur version
	// if cur version == 0 means return current active config
	// if all cur version is the newest,the request will block until a new version come
	// if some keys' version is the newest,and some keys' version is old,then the keys with old version will return newest version and datas,the newest's keys will only return version
	Keys map[string]uint32 `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //can't contain '.' in key
}

func (x *WatchConfigReq) Reset() {
	*x = WatchConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchConfigReq) ProtoMessage() {}

func (x *WatchConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchConfigReq.ProtoReflect.Descriptor instead.
func (*WatchConfigReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{18}
}

func (x *WatchConfigReq) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *WatchConfigReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *WatchConfigReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *WatchConfigReq) GetKeys() map[string]uint32 {
	if x != nil {
		return x.Keys
	}
	return nil
}

type WatchConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datas map[string]*WatchData `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WatchConfigResp) Reset() {
	*x = WatchConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchConfigResp) ProtoMessage() {}

func (x *WatchConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchConfigResp.ProtoReflect.Descriptor instead.
func (*WatchConfigResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{19}
}

func (x *WatchConfigResp) GetDatas() map[string]*WatchData {
	if x != nil {
		return x.Datas
	}
	return nil
}

type WatchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value     string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	ValueType string `protobuf:"bytes,3,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	Version   uint32 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *WatchData) Reset() {
	*x = WatchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchData) ProtoMessage() {}

func (x *WatchData) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchData.ProtoReflect.Descriptor instead.
func (*WatchData) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{20}
}

func (x *WatchData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WatchData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *WatchData) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *WatchData) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type WatchDiscoverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName                string   `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	GName                      string   `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName                      string   `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	CurDiscoverMode            string   `protobuf:"bytes,4,opt,name=cur_discover_mode,json=curDiscoverMode,proto3" json:"cur_discover_mode,omitempty"`
	CurDnsHost                 string   `protobuf:"bytes,5,opt,name=cur_dns_host,json=curDnsHost,proto3" json:"cur_dns_host,omitempty"`                                                  //when discover_mode == "dns"
	CurDnsInterval             uint32   `protobuf:"varint,6,opt,name=cur_dns_interval,json=curDnsInterval,proto3" json:"cur_dns_interval,omitempty"`                                     //when cur_discover_mode == "dns",unit seconds
	CurStaticAddrs             []string `protobuf:"bytes,7,rep,name=cur_static_addrs,json=curStaticAddrs,proto3" json:"cur_static_addrs,omitempty"`                                      //when cur_discover_mode == "static"
	CurKubernetesNamespace     string   `protobuf:"bytes,8,opt,name=cur_kubernetes_namespace,json=curKubernetesNamespace,proto3" json:"cur_kubernetes_namespace,omitempty"`              //when cur_discover_mode == "kubernetes"
	CurKubernetesLabelselector string   `protobuf:"bytes,9,opt,name=cur_kubernetes_labelselector,json=curKubernetesLabelselector,proto3" json:"cur_kubernetes_labelselector,omitempty"`  //when cur_discover_mode == "kubernetes"
	CurKubernetesFieldselector string   `protobuf:"bytes,10,opt,name=cur_kubernetes_fieldselector,json=curKubernetesFieldselector,proto3" json:"cur_kubernetes_fieldselector,omitempty"` //when cur_discover_mode == "kubernetes"
	CurCrpcPort                uint32   `protobuf:"varint,11,opt,name=cur_crpc_port,json=curCrpcPort,proto3" json:"cur_crpc_port,omitempty"`
	CurCgrpcPort               uint32   `protobuf:"varint,12,opt,name=cur_cgrpc_port,json=curCgrpcPort,proto3" json:"cur_cgrpc_port,omitempty"`
	CurWebPort                 uint32   `protobuf:"varint,13,opt,name=cur_web_port,json=curWebPort,proto3" json:"cur_web_port,omitempty"`
}

func (x *WatchDiscoverReq) Reset() {
	*x = WatchDiscoverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDiscoverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDiscoverReq) ProtoMessage() {}

func (x *WatchDiscoverReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDiscoverReq.ProtoReflect.Descriptor instead.
func (*WatchDiscoverReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{21}
}

func (x *WatchDiscoverReq) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *WatchDiscoverReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *WatchDiscoverReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *WatchDiscoverReq) GetCurDiscoverMode() string {
	if x != nil {
		return x.CurDiscoverMode
	}
	return ""
}

func (x *WatchDiscoverReq) GetCurDnsHost() string {
	if x != nil {
		return x.CurDnsHost
	}
	return ""
}

func (x *WatchDiscoverReq) GetCurDnsInterval() uint32 {
	if x != nil {
		return x.CurDnsInterval
	}
	return 0
}

func (x *WatchDiscoverReq) GetCurStaticAddrs() []string {
	if x != nil {
		return x.CurStaticAddrs
	}
	return nil
}

func (x *WatchDiscoverReq) GetCurKubernetesNamespace() string {
	if x != nil {
		return x.CurKubernetesNamespace
	}
	return ""
}

func (x *WatchDiscoverReq) GetCurKubernetesLabelselector() string {
	if x != nil {
		return x.CurKubernetesLabelselector
	}
	return ""
}

func (x *WatchDiscoverReq) GetCurKubernetesFieldselector() string {
	if x != nil {
		return x.CurKubernetesFieldselector
	}
	return ""
}

func (x *WatchDiscoverReq) GetCurCrpcPort() uint32 {
	if x != nil {
		return x.CurCrpcPort
	}
	return 0
}

func (x *WatchDiscoverReq) GetCurCgrpcPort() uint32 {
	if x != nil {
		return x.CurCgrpcPort
	}
	return 0
}

func (x *WatchDiscoverReq) GetCurWebPort() uint32 {
	if x != nil {
		return x.CurWebPort
	}
	return 0
}

type WatchDiscoverResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscoverMode            string   `protobuf:"bytes,1,opt,name=discover_mode,json=discoverMode,proto3" json:"discover_mode,omitempty"`
	DnsHost                 string   `protobuf:"bytes,2,opt,name=dns_host,json=dnsHost,proto3" json:"dns_host,omitempty"`                                                 //when discover_mode == "dns"
	DnsInterval             uint32   `protobuf:"varint,3,opt,name=dns_interval,json=dnsInterval,proto3" json:"dns_interval,omitempty"`                                    //when discover_mode == "dns"
	StaticAddrs             []string `protobuf:"bytes,4,rep,name=static_addrs,json=staticAddrs,proto3" json:"static_addrs,omitempty"`                                     //when discover_mode == "static"
	KubernetesNamespace     string   `protobuf:"bytes,5,opt,name=kubernetes_namespace,json=kubernetesNamespace,proto3" json:"kubernetes_namespace,omitempty"`             //when discover_mode == "kubernetes"
	KubernetesLabelselector string   `protobuf:"bytes,6,opt,name=kubernetes_labelselector,json=kubernetesLabelselector,proto3" json:"kubernetes_labelselector,omitempty"` //when discover_mode == "kubernetes"
	KubernetesFieldselector string   `protobuf:"bytes,7,opt,name=kubernetes_fieldselector,json=kubernetesFieldselector,proto3" json:"kubernetes_fieldselector,omitempty"` //when discover_mode == "kubernetes"
	CrpcPort                uint32   `protobuf:"varint,8,opt,name=crpc_port,json=crpcPort,proto3" json:"crpc_port,omitempty"`
	CgrpcPort               uint32   `protobuf:"varint,9,opt,name=cgrpc_port,json=cgrpcPort,proto3" json:"cgrpc_port,omitempty"`
	WebPort                 uint32   `protobuf:"varint,10,opt,name=web_port,json=webPort,proto3" json:"web_port,omitempty"`
}

func (x *WatchDiscoverResp) Reset() {
	*x = WatchDiscoverResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchDiscoverResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchDiscoverResp) ProtoMessage() {}

func (x *WatchDiscoverResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchDiscoverResp.ProtoReflect.Descriptor instead.
func (*WatchDiscoverResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{22}
}

func (x *WatchDiscoverResp) GetDiscoverMode() string {
	if x != nil {
		return x.DiscoverMode
	}
	return ""
}

func (x *WatchDiscoverResp) GetDnsHost() string {
	if x != nil {
		return x.DnsHost
	}
	return ""
}

func (x *WatchDiscoverResp) GetDnsInterval() uint32 {
	if x != nil {
		return x.DnsInterval
	}
	return 0
}

func (x *WatchDiscoverResp) GetStaticAddrs() []string {
	if x != nil {
		return x.StaticAddrs
	}
	return nil
}

func (x *WatchDiscoverResp) GetKubernetesNamespace() string {
	if x != nil {
		return x.KubernetesNamespace
	}
	return ""
}

func (x *WatchDiscoverResp) GetKubernetesLabelselector() string {
	if x != nil {
		return x.KubernetesLabelselector
	}
	return ""
}

func (x *WatchDiscoverResp) GetKubernetesFieldselector() string {
	if x != nil {
		return x.KubernetesFieldselector
	}
	return ""
}

func (x *WatchDiscoverResp) GetCrpcPort() uint32 {
	if x != nil {
		return x.CrpcPort
	}
	return 0
}

func (x *WatchDiscoverResp) GetCgrpcPort() uint32 {
	if x != nil {
		return x.CgrpcPort
	}
	return 0
}

func (x *WatchDiscoverResp) GetWebPort() uint32 {
	if x != nil {
		return x.WebPort
	}
	return 0
}

// instance
type InstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TotalMem    uint64  `protobuf:"varint,2,opt,name=total_mem,json=totalMem,proto3" json:"total_mem,omitempty"`
	CurMemUsage uint64  `protobuf:"varint,3,opt,name=cur_mem_usage,json=curMemUsage,proto3" json:"cur_mem_usage,omitempty"`
	CpuNum      float64 `protobuf:"fixed64,4,opt,name=cpu_num,json=cpuNum,proto3" json:"cpu_num,omitempty"`
	CurCpuUsage float64 `protobuf:"fixed64,5,opt,name=cur_cpu_usage,json=curCpuUsage,proto3" json:"cur_cpu_usage,omitempty"`
}

func (x *InstanceInfo) Reset() {
	*x = InstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceInfo) ProtoMessage() {}

func (x *InstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceInfo.ProtoReflect.Descriptor instead.
func (*InstanceInfo) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{23}
}

func (x *InstanceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstanceInfo) GetTotalMem() uint64 {
	if x != nil {
		return x.TotalMem
	}
	return 0
}

func (x *InstanceInfo) GetCurMemUsage() uint64 {
	if x != nil {
		return x.CurMemUsage
	}
	return 0
}

func (x *InstanceInfo) GetCpuNum() float64 {
	if x != nil {
		return x.CpuNum
	}
	return 0
}

func (x *InstanceInfo) GetCurCpuUsage() float64 {
	if x != nil {
		return x.CurCpuUsage
	}
	return 0
}

type GetInstancesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GName     string   `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName     string   `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	Secret    string   `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	WithInfo  bool     `protobuf:"varint,5,opt,name=with_info,json=withInfo,proto3" json:"with_info,omitempty"`
}

func (x *GetInstancesReq) Reset() {
	*x = GetInstancesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstancesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstancesReq) ProtoMessage() {}

func (x *GetInstancesReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstancesReq.ProtoReflect.Descriptor instead.
func (*GetInstancesReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{24}
}

func (x *GetInstancesReq) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *GetInstancesReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *GetInstancesReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *GetInstancesReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *GetInstancesReq) GetWithInfo() bool {
	if x != nil {
		return x.WithInfo
	}
	return false
}

type GetInstancesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instances map[string]*InstanceInfo `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //key addr,value info,if with_info is false,value is empty
}

func (x *GetInstancesResp) Reset() {
	*x = GetInstancesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstancesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstancesResp) ProtoMessage() {}

func (x *GetInstancesResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstancesResp.ProtoReflect.Descriptor instead.
func (*GetInstancesResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{25}
}

func (x *GetInstancesResp) GetInstances() map[string]*InstanceInfo {
	if x != nil {
		return x.Instances
	}
	return nil
}

type GetInstanceInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GName     string   `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName     string   `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	Secret    string   `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	Addr      string   `protobuf:"bytes,5,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *GetInstanceInfoReq) Reset() {
	*x = GetInstanceInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceInfoReq) ProtoMessage() {}

func (x *GetInstanceInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceInfoReq.ProtoReflect.Descriptor instead.
func (*GetInstanceInfoReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{26}
}

func (x *GetInstanceInfoReq) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *GetInstanceInfoReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *GetInstanceInfoReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *GetInstanceInfoReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *GetInstanceInfoReq) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type GetInstanceInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *InstanceInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetInstanceInfoResp) Reset() {
	*x = GetInstanceInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceInfoResp) ProtoMessage() {}

func (x *GetInstanceInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceInfoResp.ProtoReflect.Descriptor instead.
func (*GetInstanceInfoResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{27}
}

func (x *GetInstanceInfoResp) GetInfo() *InstanceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type SetProxyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GName     string   `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName     string   `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	Path      string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Read      bool     `protobuf:"varint,5,opt,name=read,proto3" json:"read,omitempty"`   //need read permission on this node
	Write     bool     `protobuf:"varint,6,opt,name=write,proto3" json:"write,omitempty"` //need write permission on this node
	Admin     bool     `protobuf:"varint,7,opt,name=admin,proto3" json:"admin,omitempty"` //need admin permission on this node
	Secret    string   `protobuf:"bytes,8,opt,name=secret,proto3" json:"secret,omitempty"`
	NewPath   bool     `protobuf:"varint,9,opt,name=new_path,json=newPath,proto3" json:"new_path,omitempty"` //true: create a new proxy path config. false: update the already exist proxy path setting
}

func (x *SetProxyReq) Reset() {
	*x = SetProxyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProxyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProxyReq) ProtoMessage() {}

func (x *SetProxyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProxyReq.ProtoReflect.Descriptor instead.
func (*SetProxyReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{28}
}

func (x *SetProxyReq) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *SetProxyReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *SetProxyReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *SetProxyReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SetProxyReq) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

func (x *SetProxyReq) GetWrite() bool {
	if x != nil {
		return x.Write
	}
	return false
}

func (x *SetProxyReq) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *SetProxyReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *SetProxyReq) GetNewPath() bool {
	if x != nil {
		return x.NewPath
	}
	return false
}

type SetProxyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId []uint32 `protobuf:"varint,1,rep,packed,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *SetProxyResp) Reset() {
	*x = SetProxyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProxyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProxyResp) ProtoMessage() {}

func (x *SetProxyResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProxyResp.ProtoReflect.Descriptor instead.
func (*SetProxyResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{29}
}

func (x *SetProxyResp) GetNodeId() []uint32 {
	if x != nil {
		return x.NodeId
	}
	return nil
}

type DelProxyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GName     string   `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName     string   `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	Path      string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Secret    string   `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *DelProxyReq) Reset() {
	*x = DelProxyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelProxyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelProxyReq) ProtoMessage() {}

func (x *DelProxyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelProxyReq.ProtoReflect.Descriptor instead.
func (*DelProxyReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{30}
}

func (x *DelProxyReq) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *DelProxyReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *DelProxyReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *DelProxyReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DelProxyReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type DelProxyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelProxyResp) Reset() {
	*x = DelProxyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelProxyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelProxyResp) ProtoMessage() {}

func (x *DelProxyResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelProxyResp.ProtoReflect.Descriptor instead.
func (*DelProxyResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{31}
}

type ProxyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId []uint32 `protobuf:"varint,1,rep,packed,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GName     string   `protobuf:"bytes,2,opt,name=g_name,json=gName,proto3" json:"g_name,omitempty"`
	AName     string   `protobuf:"bytes,3,opt,name=a_name,json=aName,proto3" json:"a_name,omitempty"`
	Path      string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Data      string   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	ForceAddr string   `protobuf:"bytes,6,opt,name=force_addr,json=forceAddr,proto3" json:"force_addr,omitempty"`
}

func (x *ProxyReq) Reset() {
	*x = ProxyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyReq) ProtoMessage() {}

func (x *ProxyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyReq.ProtoReflect.Descriptor instead.
func (*ProxyReq) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{32}
}

func (x *ProxyReq) GetProjectId() []uint32 {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *ProxyReq) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *ProxyReq) GetAName() string {
	if x != nil {
		return x.AName
	}
	return ""
}

func (x *ProxyReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ProxyReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ProxyReq) GetForceAddr() string {
	if x != nil {
		return x.ForceAddr
	}
	return ""
}

type ProxyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ProxyResp) Reset() {
	*x = ProxyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_app_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyResp) ProtoMessage() {}

func (x *ProxyResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_app_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyResp.ProtoReflect.Descriptor instead.
func (*ProxyResp) Descriptor() ([]byte, []int) {
	return file_api_admin_app_proto_rawDescGZIP(), []int{33}
}

func (x *ProxyResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_api_admin_app_proto protoreflect.FileDescriptor

var file_api_admin_app_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x0f, 0x70, 0x62,
	0x65, 0x78, 0x2f, 0x70, 0x62, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01,
	0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x42, 0x04, 0x88, 0x90, 0x4e, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x06, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x88, 0xa1,
	0x8d, 0x06, 0x20, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xa0, 0x05, 0x0a, 0x0c,
	0x67, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x31, 0x0a, 0x14, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x18, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x39, 0x0a, 0x18, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6e,
	0x73, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6e,
	0x73, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x6e, 0x73,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x63, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x67,
	0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x77, 0x65, 0x62, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x65, 0x74,
	0x5f, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x1a, 0x4f, 0x0a, 0x09, 0x4b,
	0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x50, 0x0a, 0x0a,
	0x50, 0x61, 0x74, 0x68, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6a,
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0xaf, 0x01, 0x0a, 0x0f, 0x6b,
	0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x61, 0x78, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x75, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x75, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xef, 0x04, 0x0a,
	0x0b, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d,
	0x42, 0x04, 0x88, 0x90, 0x4e, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x06, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x88, 0xa1, 0x8d,
	0x06, 0x20, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x44, 0x0a, 0x0d, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1f, 0xd2, 0x90, 0x4e, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0xd2, 0x90, 0x4e, 0x03, 0x64, 0x6e, 0x73, 0xd2, 0x90, 0x4e, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x31, 0x0a, 0x14, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x18, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x39,
	0x0a, 0x18, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x17, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6e, 0x73,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6e, 0x73,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x6e, 0x73, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x09, 0x63, 0x72,
	0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xa0,
	0x91, 0x4e, 0x00, 0xb0, 0x91, 0x4e, 0x80, 0x80, 0x04, 0x52, 0x08, 0x63, 0x72, 0x70, 0x63, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x63, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xa0, 0x91, 0x4e, 0x00, 0xb0, 0x91, 0x4e,
	0x80, 0x80, 0x04, 0x52, 0x09, 0x63, 0x67, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x25,
	0x0a, 0x08, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x0a, 0xa0, 0x91, 0x4e, 0x00, 0xb0, 0x91, 0x4e, 0x80, 0x80, 0x04, 0x52, 0x07, 0x77, 0x65,
	0x62, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x70, 0x70,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x41, 0x70, 0x70, 0x22, 0x27,
	0x0a, 0x0c, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x5f,
	0x61, 0x70, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x04, 0x88, 0x90, 0x4e,
	0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06,
	0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90,
	0x4e, 0x00, 0x52, 0x05, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52,
	0x05, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x88, 0xa1, 0x8d, 0x06, 0x20, 0x52, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0xc2, 0x01, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x42, 0x04, 0x88, 0x90, 0x4e, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x05, 0x88, 0xa1, 0x8d, 0x06, 0x20, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x88, 0xa1, 0x8d, 0x06, 0x20, 0x52,
	0x09, 0x6e, 0x65, 0x77, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x22, 0xa3, 0x01, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x72, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x04, 0x88, 0x90, 0x4e, 0x02, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52,
	0x05, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x61, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x88, 0xa1, 0x8d,
	0x06, 0x20, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x64, 0x65,
	0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0xc0, 0x01, 0x0a, 0x12, 0x67,
	0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65,
	0x71, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x04, 0x88, 0x90, 0x4e, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0,
	0x90, 0x4e, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05,
	0x88, 0xa1, 0x8d, 0x06, 0x20, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xc4, 0x01,
	0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x75, 0x72, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x68, 0x69, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x9f, 0x02, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42,
	0x04, 0x88, 0x90, 0x4e, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x06, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x06, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0,
	0x90, 0x4e, 0x00, 0x52, 0x05, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3e,
	0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1f, 0xd2, 0x90, 0x4e, 0x03, 0x72, 0x61, 0x77, 0xd2, 0x90, 0x4e, 0x04, 0x6a,
	0x73, 0x6f, 0x6e, 0xd2, 0x90, 0x4e, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0xd2, 0x90, 0x4e, 0x04, 0x74,
	0x6f, 0x6d, 0x6c, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05,
	0x88, 0xa1, 0x8d, 0x06, 0x20, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x65, 0x77, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x73, 0x65, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0xc0, 0x01,
	0x0a, 0x0c, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x23,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x42, 0x04, 0x88, 0x90, 0x4e, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x06, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x88, 0xa1, 0x8d, 0x06, 0x20, 0x52, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x04, 0xa0, 0x91, 0x4e, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x0f, 0x0a, 0x0d, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x22, 0xeb, 0x01, 0x0a, 0x10, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90,
	0x4e, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x06, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06,
	0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90,
	0x4e, 0x00, 0x52, 0x05, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71,
	0x2e, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x04, 0x98, 0x90, 0x4e, 0x00,
	0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x9b, 0x01, 0x0a, 0x11, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x1a, 0x4b, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6d, 0x0a,
	0x0a, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x80, 0x05, 0x0a,
	0x12, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06,
	0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90,
	0x4e, 0x00, 0x52, 0x05, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52,
	0x05, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x23, 0xd2, 0x90, 0x4e, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0xd2, 0x90, 0x4e, 0x03, 0x64, 0x6e, 0x73, 0xd2, 0x90, 0x4e, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0xd2, 0x90, 0x4e, 0x00, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x5f, 0x64,
	0x6e, 0x73, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x75, 0x72, 0x44, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75, 0x72,
	0x5f, 0x64, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x44, 0x6e, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x75, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x38, 0x0a,
	0x18, 0x63, 0x75, 0x72, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x63, 0x75, 0x72, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x1c, 0x63, 0x75, 0x72, 0x5f, 0x6b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x63,
	0x75, 0x72, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x1c, 0x63, 0x75, 0x72,
	0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1a, 0x63, 0x75, 0x72, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x0d, 0x63,
	0x75, 0x72, 0x5f, 0x63, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x06, 0xb0, 0x91, 0x4e, 0x80, 0x80, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x43,
	0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x5f, 0x63,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x06, 0xb0, 0x91, 0x4e, 0x80, 0x80, 0x04, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x43, 0x67, 0x72, 0x70,
	0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x5f, 0x77, 0x65, 0x62,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xb0, 0x91, 0x4e,
	0x80, 0x80, 0x04, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x57, 0x65, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x22,
	0xb3, 0x03, 0x0a, 0x13, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x64, 0x6e, 0x73, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x6e, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6e, 0x73, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64,
	0x6e, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x31, 0x0a,
	0x14, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6b, 0x75, 0x62,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x39, 0x0a, 0x18, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x17, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x18, 0x6b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x09, 0x63, 0x72, 0x70, 0x63, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xb0, 0x91, 0x4e, 0x80, 0x80,
	0x04, 0x52, 0x08, 0x63, 0x72, 0x70, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0a, 0x63,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x06, 0xb0, 0x91, 0x4e, 0x80, 0x80, 0x04, 0x52, 0x09, 0x63, 0x67, 0x72, 0x70, 0x63, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x21, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x06, 0xb0, 0x91, 0x4e, 0x80, 0x80, 0x04, 0x52, 0x07, 0x77, 0x65,
	0x62, 0x50, 0x6f, 0x72, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x5f,
	0x6d, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x63, 0x75, 0x72, 0x4d, 0x65, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x70, 0x75, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x63,
	0x70, 0x75, 0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x5f, 0x63, 0x70, 0x75,
	0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x75,
	0x72, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x11, 0x67, 0x65,
	0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x42, 0x04, 0x88, 0x90, 0x4e, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x04, 0xe8, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x09, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x1a, 0x52, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa8, 0x01, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71,
	0x12, 0x23, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x42, 0x04, 0x88, 0x90, 0x4e, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0xe8, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf0, 0x90, 0x4e, 0x00, 0x52, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x22, 0x42, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x82, 0x02, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x04, 0x88, 0x90, 0x4e,
	0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06,
	0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0x90,
	0x4e, 0x00, 0x52, 0x05, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0x90, 0x4e, 0x00, 0x52,
	0x05, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0x90, 0x4e, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x72, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x1d, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x05, 0x88, 0xa1, 0x8d, 0x06, 0x20, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x74, 0x68, 0x22, 0x29, 0x0a, 0x0e, 0x73, 0x65,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x04, 0x88, 0x90, 0x4e,
	0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06,
	0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0x90,
	0x4e, 0x00, 0x52, 0x05, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0x90, 0x4e, 0x00, 0x52,
	0x05, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0x90, 0x4e, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x1d, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x05, 0x88, 0xa1, 0x8d, 0x06, 0x20, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22,
	0x10, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x22, 0xbd, 0x01, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x42, 0x04, 0x88, 0x90, 0x4e, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x04, 0xe8, 0x90, 0x4e, 0x00, 0x52, 0x05, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe8, 0x90,
	0x4e, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xf8, 0x90, 0x4e, 0x02, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x22, 0x20, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x32, 0xdb, 0x09, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x12, 0x45, 0x0a, 0x07, 0x67,
	0x65, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x12, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67,
	0x65, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22,
	0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x12, 0x12, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x65,
	0x71, 0x1a, 0x13, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x70,
	0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74,
	0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x45, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x5f, 0x61, 0x70, 0x70, 0x12, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x6c,
	0x5f, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x64, 0x65, 0x6c, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a,
	0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x63, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x45, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x5f, 0x6b, 0x65, 0x79,
	0x12, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x6c, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x72, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x6c,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70,
	0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x5a, 0x0a, 0x0e,
	0x67, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x19,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92,
	0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x5a, 0x0a, 0x0e, 0x73, 0x65, 0x74, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x19, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x48, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x12, 0x13, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x72, 0x6f,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49,
	0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x58,
	0x0a, 0x0c, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x22, 0x15, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x09, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x12, 0x5e, 0x0a, 0x0e, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x22, 0x15, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x09, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x12, 0x57, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f,
	0x72, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x65, 0x74, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11,
	0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x63, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67,
	0x65, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x72, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x67, 0x65, 0x74,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4b, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x12, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x73, 0x65, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x22, 0x11, 0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x4b, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x12, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64, 0x65, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x64,
	0x65, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11, 0x8a,
	0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x3f, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x10, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x22, 0x11,
	0x8a, 0x9f, 0x49, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x92, 0x9f, 0x49, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x68, 0x65, 0x6e, 0x6a, 0x69, 0x65, 0x31, 0x39, 0x39, 0x32, 0x33, 0x34, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_admin_app_proto_rawDescOnce sync.Once
	file_api_admin_app_proto_rawDescData = file_api_admin_app_proto_rawDesc
)

func file_api_admin_app_proto_rawDescGZIP() []byte {
	file_api_admin_app_proto_rawDescOnce.Do(func() {
		file_api_admin_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_admin_app_proto_rawDescData)
	})
	return file_api_admin_app_proto_rawDescData
}

var file_api_admin_app_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_api_admin_app_proto_goTypes = []any{
	(*GetAppReq)(nil),           // 0: admin.get_app_req
	(*GetAppResp)(nil),          // 1: admin.get_app_resp
	(*ProxyPathInfo)(nil),       // 2: admin.proxy_path_info
	(*KeyConfigInfo)(nil),       // 3: admin.key_config_info
	(*SetAppReq)(nil),           // 4: admin.set_app_req
	(*SetAppResp)(nil),          // 5: admin.set_app_resp
	(*DelAppReq)(nil),           // 6: admin.del_app_req
	(*DelAppResp)(nil),          // 7: admin.del_app_resp
	(*UpdateAppSecretReq)(nil),  // 8: admin.update_app_secret_req
	(*UpdateAppSecretResp)(nil), // 9: admin.update_app_secret_resp
	(*DelKeyReq)(nil),           // 10: admin.del_key_req
	(*DelKeyResp)(nil),          // 11: admin.del_key_resp
	(*GetKeyConfigReq)(nil),     // 12: admin.get_key_config_req
	(*GetKeyConfigResp)(nil),    // 13: admin.get_key_config_resp
	(*SetKeyConfigReq)(nil),     // 14: admin.set_key_config_req
	(*SetKeyConfigResp)(nil),    // 15: admin.set_key_config_resp
	(*RollbackReq)(nil),         // 16: admin.rollback_req
	(*RollbackResp)(nil),        // 17: admin.rollback_resp
	(*WatchConfigReq)(nil),      // 18: admin.watch_config_req
	(*WatchConfigResp)(nil),     // 19: admin.watch_config_resp
	(*WatchData)(nil),           // 20: admin.watch_data
	(*WatchDiscoverReq)(nil),    // 21: admin.watch_discover_req
	(*WatchDiscoverResp)(nil),   // 22: admin.watch_discover_resp
	(*InstanceInfo)(nil),        // 23: admin.instance_info
	(*GetInstancesReq)(nil),     // 24: admin.get_instances_req
	(*GetInstancesResp)(nil),    // 25: admin.get_instances_resp
	(*GetInstanceInfoReq)(nil),  // 26: admin.get_instance_info_req
	(*GetInstanceInfoResp)(nil), // 27: admin.get_instance_info_resp
	(*SetProxyReq)(nil),         // 28: admin.set_proxy_req
	(*SetProxyResp)(nil),        // 29: admin.set_proxy_resp
	(*DelProxyReq)(nil),         // 30: admin.del_proxy_req
	(*DelProxyResp)(nil),        // 31: admin.del_proxy_resp
	(*ProxyReq)(nil),            // 32: admin.proxy_req
	(*ProxyResp)(nil),           // 33: admin.proxy_resp
	nil,                         // 34: admin.get_app_resp.KeysEntry
	nil,                         // 35: admin.get_app_resp.PathsEntry
	nil,                         // 36: admin.watch_config_req.KeysEntry
	nil,                         // 37: admin.watch_config_resp.DatasEntry
	nil,                         // 38: admin.get_instances_resp.InstancesEntry
}
var file_api_admin_app_proto_depIdxs = []int32{
	34, // 0: admin.get_app_resp.keys:type_name -> admin.get_app_resp.KeysEntry
	35, // 1: admin.get_app_resp.paths:type_name -> admin.get_app_resp.PathsEntry
	36, // 2: admin.watch_config_req.keys:type_name -> admin.watch_config_req.KeysEntry
	37, // 3: admin.watch_config_resp.datas:type_name -> admin.watch_config_resp.DatasEntry
	38, // 4: admin.get_instances_resp.instances:type_name -> admin.get_instances_resp.InstancesEntry
	23, // 5: admin.get_instance_info_resp.info:type_name -> admin.instance_info
	3,  // 6: admin.get_app_resp.KeysEntry.value:type_name -> admin.key_config_info
	2,  // 7: admin.get_app_resp.PathsEntry.value:type_name -> admin.proxy_path_info
	20, // 8: admin.watch_config_resp.DatasEntry.value:type_name -> admin.watch_data
	23, // 9: admin.get_instances_resp.InstancesEntry.value:type_name -> admin.instance_info
	0,  // 10: admin.app.get_app:input_type -> admin.get_app_req
	4,  // 11: admin.app.set_app:input_type -> admin.set_app_req
	6,  // 12: admin.app.del_app:input_type -> admin.del_app_req
	8,  // 13: admin.app.update_app_secret:input_type -> admin.update_app_secret_req
	10, // 14: admin.app.del_key:input_type -> admin.del_key_req
	12, // 15: admin.app.get_key_config:input_type -> admin.get_key_config_req
	14, // 16: admin.app.set_key_config:input_type -> admin.set_key_config_req
	16, // 17: admin.app.rollback:input_type -> admin.rollback_req
	18, // 18: admin.app.watch_config:input_type -> admin.watch_config_req
	21, // 19: admin.app.watch_discover:input_type -> admin.watch_discover_req
	24, // 20: admin.app.get_instances:input_type -> admin.get_instances_req
	26, // 21: admin.app.get_instance_info:input_type -> admin.get_instance_info_req
	28, // 22: admin.app.set_proxy:input_type -> admin.set_proxy_req
	30, // 23: admin.app.del_proxy:input_type -> admin.del_proxy_req
	32, // 24: admin.app.proxy:input_type -> admin.proxy_req
	1,  // 25: admin.app.get_app:output_type -> admin.get_app_resp
	5,  // 26: admin.app.set_app:output_type -> admin.set_app_resp
	7,  // 27: admin.app.del_app:output_type -> admin.del_app_resp
	9,  // 28: admin.app.update_app_secret:output_type -> admin.update_app_secret_resp
	11, // 29: admin.app.del_key:output_type -> admin.del_key_resp
	13, // 30: admin.app.get_key_config:output_type -> admin.get_key_config_resp
	15, // 31: admin.app.set_key_config:output_type -> admin.set_key_config_resp
	17, // 32: admin.app.rollback:output_type -> admin.rollback_resp
	19, // 33: admin.app.watch_config:output_type -> admin.watch_config_resp
	22, // 34: admin.app.watch_discover:output_type -> admin.watch_discover_resp
	25, // 35: admin.app.get_instances:output_type -> admin.get_instances_resp
	27, // 36: admin.app.get_instance_info:output_type -> admin.get_instance_info_resp
	29, // 37: admin.app.set_proxy:output_type -> admin.set_proxy_resp
	31, // 38: admin.app.del_proxy:output_type -> admin.del_proxy_resp
	33, // 39: admin.app.proxy:output_type -> admin.proxy_resp
	25, // [25:40] is the sub-list for method output_type
	10, // [10:25] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_admin_app_proto_init() }
func file_api_admin_app_proto_init() {
	if File_api_admin_app_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_admin_app_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetAppResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ProxyPathInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*KeyConfigInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SetAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SetAppResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DelAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DelAppResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAppSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAppSecretResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DelKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*DelKeyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetKeyConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetKeyConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SetKeyConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SetKeyConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*RollbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*RollbackResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*WatchConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*WatchConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*WatchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*WatchDiscoverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*WatchDiscoverResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*GetInstancesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*GetInstancesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetInstanceInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetInstanceInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*SetProxyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*SetProxyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*DelProxyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*DelProxyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*ProxyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_app_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*ProxyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_admin_app_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_admin_app_proto_goTypes,
		DependencyIndexes: file_api_admin_app_proto_depIdxs,
		MessageInfos:      file_api_admin_app_proto_msgTypes,
	}.Build()
	File_api_admin_app_proto = out.File
	file_api_admin_app_proto_rawDesc = nil
	file_api_admin_app_proto_goTypes = nil
	file_api_admin_app_proto_depIdxs = nil
}
